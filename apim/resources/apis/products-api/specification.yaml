openapi: 3.0.1
info:
  title: Products API
  description: API
  version: ''
servers:
  - url: https://apim-apimdemo-dev.azure-api.net/products
paths:
  /api/Products:
    get:
      tags:
        - Products
      summary: /api/Products - GET
      description: /api/Products - GET
      operationId: get-api-products
      parameters:
        - name: api-version
          in: query
          description: The requested API version
          schema:
            type: string
            default: '1.0'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              example:
                - id: 0
                  name: string
                  description: string
                  sku: string
    post:
      tags:
        - Products
      summary: /api/Products - POST
      description: /api/Products - POST
      operationId: post-api-products
      parameters:
        - name: api-version
          in: query
          description: The requested API version
          schema:
            type: string
            default: '1.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              id: 0
              name: string
              description: string
              sku: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: 0
                name: string
                description: string
                sku: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  '/api/Products/{id}':
    get:
      tags:
        - Products
      summary: '/api/Products/{id} - GET'
      description: '/api/Products/{id} - GET'
      operationId: get-api-products-id
      parameters:
        - name: id
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: query
          description: The requested API version
          schema:
            type: string
            default: '1.0'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: 0
                name: string
                description: string
                sku: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
    patch:
      tags:
        - Products
      summary: '/api/Products/{id} - PATCH'
      description: '/api/Products/{id} - PATCH'
      operationId: patch-api-products-id
      parameters:
        - name: id
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: query
          description: The requested API version
          schema:
            type: string
            default: '1.0'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              id: 0
              name: string
              description: string
              sku: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
    delete:
      tags:
        - Products
      summary: '/api/Products/{id} - DELETE'
      description: '/api/Products/{id} - DELETE'
      operationId: delete-api-products-id
      parameters:
        - name: id
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
        - name: api-version
          in: query
          description: The requested API version
          schema:
            type: string
            default: '1.0'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
components:
  schemas:
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        sku:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]